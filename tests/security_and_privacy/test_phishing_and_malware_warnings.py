import pytest
from selenium.webdriver import Firefox
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait

from modules.browser_object_tabbar import TabBar


@pytest.fixture()
def add_prefs():
    return [
        ("browser.safebrowsing.malware.enabled", True),
        ("browser.safebrowsing.phishing.enabled", True),
    ]


def get_error_title(driver, url, expected_title):
    """
    Navigate to the given URL and assert the error title text.
    """
    driver.get(url)
    error_title_element = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.ID, "errorTitleText"))
    )
    error_title = error_title_element.get_attribute("innerText")
    assert error_title == expected_title, (
        f"Expected error title '{expected_title}' not found at {url}. "
        f"Actual: {error_title}"
    )


def test_phishing_and_malware_warning_errors(driver: Firefox):
    """
    C1901393: - This tests that when a user accesses websites suspected of phishing or malware, a warning page is
    displayed.
    """
    # Create the object
    tabs = TabBar(driver)

    # Test phishing warning page
    phishing_url = "http://www.itisatrap.org/firefox/its-a-trap.html"
    get_error_title(driver, phishing_url, "Deceptive site ahead")

    # Open a new tab
    tabs.new_tab_by_button()
    tabs.wait_for_num_tabs(2)
    driver.switch_to.window(driver.window_handles[1])

    # Test malware warning page
    malware_url = "http://www.itisatrap.org/firefox/its-an-attack.html"
    get_error_title(driver, malware_url, "Visiting this website may harm your computer")
